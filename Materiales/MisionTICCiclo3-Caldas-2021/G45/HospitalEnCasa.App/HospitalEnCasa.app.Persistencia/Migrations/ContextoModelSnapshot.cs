// <auto-generated />
using System;
using HospitalEnCasa.app.Persistencia;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace HospitalEnCasa.app.Persistencia.Migrations
{
    [DbContext(typeof(Contexto))]
    partial class ContextoModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("HospitalEnCasa.app.Dominio.Anotacion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("HistoriaId")
                        .HasColumnType("int");

                    b.Property<string>("descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("enfermeraId")
                        .HasColumnType("int");

                    b.Property<DateTime>("fecha")
                        .HasColumnType("datetime2");

                    b.Property<int?>("medicoId")
                        .HasColumnType("int");

                    b.Property<int?>("pacienteId")
                        .HasColumnType("int");

                    b.Property<int?>("signosVitalId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("HistoriaId");

                    b.HasIndex("enfermeraId");

                    b.HasIndex("medicoId");

                    b.HasIndex("pacienteId");

                    b.HasIndex("signosVitalId");

                    b.ToTable("Anotaciones");
                });

            modelBuilder.Entity("HospitalEnCasa.app.Dominio.Cita", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Dia")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Hora")
                        .HasColumnType("datetime2");

                    b.Property<int?>("MedicoId")
                        .HasColumnType("int");

                    b.Property<int?>("PacienteId")
                        .HasColumnType("int");

                    b.Property<int>("Sala")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MedicoId");

                    b.HasIndex("PacienteId");

                    b.ToTable("Citas");
                });

            modelBuilder.Entity("HospitalEnCasa.app.Dominio.Historia", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Historias");
                });

            modelBuilder.Entity("HospitalEnCasa.app.Dominio.Horario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("Dia")
                        .HasColumnType("int");

                    b.Property<DateTime>("Hora_Final")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Hora_Inicio")
                        .HasColumnType("datetime2");

                    b.Property<int?>("MedicoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MedicoId");

                    b.ToTable("Horarios");
                });

            modelBuilder.Entity("HospitalEnCasa.app.Dominio.Persona", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("cedula")
                        .HasColumnType("int");

                    b.Property<int>("edad")
                        .HasColumnType("int");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("genero")
                        .HasColumnType("int");

                    b.Property<string>("nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("username")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("cedula")
                        .IsUnique();

                    b.HasIndex("username")
                        .IsUnique();

                    b.ToTable("Personas");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Persona");
                });

            modelBuilder.Entity("HospitalEnCasa.app.Dominio.SignoVital", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<double>("nivel_azucar")
                        .HasColumnType("float");

                    b.Property<int>("presion")
                        .HasColumnType("int");

                    b.Property<int>("pulso_cardiaco")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("SignoVitales");
                });

            modelBuilder.Entity("HospitalEnCasa.app.Dominio.Enfermera", b =>
                {
                    b.HasBaseType("HospitalEnCasa.app.Dominio.Persona");

                    b.Property<string>("descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("hospital")
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("Enfermera");
                });

            modelBuilder.Entity("HospitalEnCasa.app.Dominio.Familiar", b =>
                {
                    b.HasBaseType("HospitalEnCasa.app.Dominio.Persona");

                    b.Property<string>("direccion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Familiar_direccion");

                    b.Property<int>("latitud")
                        .HasColumnType("int")
                        .HasColumnName("Familiar_latitud");

                    b.Property<int>("longitud")
                        .HasColumnType("int")
                        .HasColumnName("Familiar_longitud");

                    b.HasDiscriminator().HasValue("Familiar");
                });

            modelBuilder.Entity("HospitalEnCasa.app.Dominio.Medico", b =>
                {
                    b.HasBaseType("HospitalEnCasa.app.Dominio.Persona");

                    b.Property<string>("nombre_hospital")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("tarjeta_profesional")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("tarjeta_profesional");

                    b.HasDiscriminator().HasValue("Medico");
                });

            modelBuilder.Entity("HospitalEnCasa.app.Dominio.Paciente", b =>
                {
                    b.HasBaseType("HospitalEnCasa.app.Dominio.Persona");

                    b.Property<string>("direccion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("enfermeraId")
                        .HasColumnType("int");

                    b.Property<int?>("familiarId")
                        .HasColumnType("int");

                    b.Property<int>("latitud")
                        .HasColumnType("int");

                    b.Property<int>("longitud")
                        .HasColumnType("int");

                    b.Property<int?>("medicoId")
                        .HasColumnType("int");

                    b.HasIndex("enfermeraId");

                    b.HasIndex("familiarId");

                    b.HasIndex("medicoId");

                    b.HasDiscriminator().HasValue("Paciente");
                });

            modelBuilder.Entity("HospitalEnCasa.app.Dominio.Anotacion", b =>
                {
                    b.HasOne("HospitalEnCasa.app.Dominio.Historia", null)
                        .WithMany("anotaciones")
                        .HasForeignKey("HistoriaId");

                    b.HasOne("HospitalEnCasa.app.Dominio.Enfermera", "enfermera")
                        .WithMany()
                        .HasForeignKey("enfermeraId");

                    b.HasOne("HospitalEnCasa.app.Dominio.Medico", "medico")
                        .WithMany()
                        .HasForeignKey("medicoId");

                    b.HasOne("HospitalEnCasa.app.Dominio.Paciente", "paciente")
                        .WithMany()
                        .HasForeignKey("pacienteId");

                    b.HasOne("HospitalEnCasa.app.Dominio.SignoVital", "signosVital")
                        .WithMany()
                        .HasForeignKey("signosVitalId");

                    b.Navigation("enfermera");

                    b.Navigation("medico");

                    b.Navigation("paciente");

                    b.Navigation("signosVital");
                });

            modelBuilder.Entity("HospitalEnCasa.app.Dominio.Cita", b =>
                {
                    b.HasOne("HospitalEnCasa.app.Dominio.Medico", "Medico")
                        .WithMany()
                        .HasForeignKey("MedicoId");

                    b.HasOne("HospitalEnCasa.app.Dominio.Paciente", "Paciente")
                        .WithMany()
                        .HasForeignKey("PacienteId");

                    b.Navigation("Medico");

                    b.Navigation("Paciente");
                });

            modelBuilder.Entity("HospitalEnCasa.app.Dominio.Horario", b =>
                {
                    b.HasOne("HospitalEnCasa.app.Dominio.Medico", null)
                        .WithMany("Horarios")
                        .HasForeignKey("MedicoId");
                });

            modelBuilder.Entity("HospitalEnCasa.app.Dominio.Paciente", b =>
                {
                    b.HasOne("HospitalEnCasa.app.Dominio.Enfermera", "enfermera")
                        .WithMany()
                        .HasForeignKey("enfermeraId");

                    b.HasOne("HospitalEnCasa.app.Dominio.Familiar", "familiar")
                        .WithMany()
                        .HasForeignKey("familiarId");

                    b.HasOne("HospitalEnCasa.app.Dominio.Medico", "medico")
                        .WithMany()
                        .HasForeignKey("medicoId");

                    b.Navigation("enfermera");

                    b.Navigation("familiar");

                    b.Navigation("medico");
                });

            modelBuilder.Entity("HospitalEnCasa.app.Dominio.Historia", b =>
                {
                    b.Navigation("anotaciones");
                });

            modelBuilder.Entity("HospitalEnCasa.app.Dominio.Medico", b =>
                {
                    b.Navigation("Horarios");
                });
#pragma warning restore 612, 618
        }
    }
}
